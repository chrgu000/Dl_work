//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DingDan_WebForm.WeiXin9002 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeiXin9002.WeiXinSoap")]
    public interface WeiXinSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_access_token", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Get_access_token();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_access_token", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Get_access_tokenAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_access_token_byAPPID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Get_access_token_byAPPID(string AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_access_token_byAPPID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Get_access_token_byAPPIDAsync(string AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_UserIdByAuthCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Get_UserIdByAuthCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_UserIdByAuthCode", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Get_UserIdByAuthCodeAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_UserIdByAuthCode_ByAPPID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Get_UserIdByAuthCode_ByAPPID(string code, string agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_UserIdByAuthCode_ByAPPID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Get_UserIdByAuthCode_ByAPPIDAsync(string code, string agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMsg_Text", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendMsg_Text(string touser, string toparty, string totag, string agentid, string strWxMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMsg_Text", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendMsg_TextAsync(string touser, string toparty, string totag, string agentid, string strWxMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMsg_TextCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendMsg_TextCard(string touser, string toparty, string totag, string agentid, string title, string description, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMsg_TextCard", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendMsg_TextCardAsync(string touser, string toparty, string totag, string agentid, string title, string description, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMsg_TextCard_EncryUrl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendMsg_TextCard_EncryUrl(string touser, string toparty, string totag, string agentid, string title, string description, string orderId, string orderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMsg_TextCard_EncryUrl", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendMsg_TextCard_EncryUrlAsync(string touser, string toparty, string totag, string agentid, string title, string description, string orderId, string orderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_jsapi_ticket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Get_jsapi_ticket();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_jsapi_ticket", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Get_jsapi_ticketAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WeiXinSoapChannel : DingDan_WebForm.WeiXin9002.WeiXinSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeiXinSoapClient : System.ServiceModel.ClientBase<DingDan_WebForm.WeiXin9002.WeiXinSoap>, DingDan_WebForm.WeiXin9002.WeiXinSoap {
        
        public WeiXinSoapClient() {
        }
        
        public WeiXinSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeiXinSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeiXinSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeiXinSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Get_access_token() {
            return base.Channel.Get_access_token();
        }
        
        public System.Threading.Tasks.Task<string> Get_access_tokenAsync() {
            return base.Channel.Get_access_tokenAsync();
        }
        
        public string Get_access_token_byAPPID(string AgentId) {
            return base.Channel.Get_access_token_byAPPID(AgentId);
        }
        
        public System.Threading.Tasks.Task<string> Get_access_token_byAPPIDAsync(string AgentId) {
            return base.Channel.Get_access_token_byAPPIDAsync(AgentId);
        }
        
        public string Get_UserIdByAuthCode(string code) {
            return base.Channel.Get_UserIdByAuthCode(code);
        }
        
        public System.Threading.Tasks.Task<string> Get_UserIdByAuthCodeAsync(string code) {
            return base.Channel.Get_UserIdByAuthCodeAsync(code);
        }
        
        public string Get_UserIdByAuthCode_ByAPPID(string code, string agentId) {
            return base.Channel.Get_UserIdByAuthCode_ByAPPID(code, agentId);
        }
        
        public System.Threading.Tasks.Task<string> Get_UserIdByAuthCode_ByAPPIDAsync(string code, string agentId) {
            return base.Channel.Get_UserIdByAuthCode_ByAPPIDAsync(code, agentId);
        }
        
        public string SendMsg_Text(string touser, string toparty, string totag, string agentid, string strWxMessage) {
            return base.Channel.SendMsg_Text(touser, toparty, totag, agentid, strWxMessage);
        }
        
        public System.Threading.Tasks.Task<string> SendMsg_TextAsync(string touser, string toparty, string totag, string agentid, string strWxMessage) {
            return base.Channel.SendMsg_TextAsync(touser, toparty, totag, agentid, strWxMessage);
        }
        
        public string SendMsg_TextCard(string touser, string toparty, string totag, string agentid, string title, string description, string url) {
            return base.Channel.SendMsg_TextCard(touser, toparty, totag, agentid, title, description, url);
        }
        
        public System.Threading.Tasks.Task<string> SendMsg_TextCardAsync(string touser, string toparty, string totag, string agentid, string title, string description, string url) {
            return base.Channel.SendMsg_TextCardAsync(touser, toparty, totag, agentid, title, description, url);
        }
        
        public string SendMsg_TextCard_EncryUrl(string touser, string toparty, string totag, string agentid, string title, string description, string orderId, string orderType) {
            return base.Channel.SendMsg_TextCard_EncryUrl(touser, toparty, totag, agentid, title, description, orderId, orderType);
        }
        
        public System.Threading.Tasks.Task<string> SendMsg_TextCard_EncryUrlAsync(string touser, string toparty, string totag, string agentid, string title, string description, string orderId, string orderType) {
            return base.Channel.SendMsg_TextCard_EncryUrlAsync(touser, toparty, totag, agentid, title, description, orderId, orderType);
        }
        
        public string Get_jsapi_ticket() {
            return base.Channel.Get_jsapi_ticket();
        }
        
        public System.Threading.Tasks.Task<string> Get_jsapi_ticketAsync() {
            return base.Channel.Get_jsapi_ticketAsync();
        }
    }
}
